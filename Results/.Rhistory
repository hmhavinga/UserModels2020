# Set working directory to source file location first! (under session)
# Reading in multiple data files (TO DO)
# https://monashbioinformaticsplatform.github.io/2015-09-28-rbioinformatics-intro-r/03-loops-R.html
study_files <- list.files(path = "Results/Study", pattern = "study.csv")
test_files <- list.files(path = "Results/Test", pattern = "test.csv")
study_files
list.files(path = "Results/Study", pattern = "study.csv")
list.files(path = "Results/Study", pattern = "csv")
setwd("~/GitHub/UserModels2020/Results")
list.files(path = "Study", pattern = "csv")
study_files <- list.files(path = "Study", pattern = "csv")
test_files <- list.files(path = "Test", pattern = "csv")
study_files
# Set working directory to source file location first! (under session)
# Reading in multiple data files (TO DO)
# https://monashbioinformaticsplatform.github.io/2015-09-28-rbioinformatics-intro-r/03-loops-R.html
study_files <- list.files(path = "Study", pattern = "csv")
test_files <- list.files(path = "Test", pattern = "csv")
# Initialize vectors for values
# After the for loop, create a dataframe with these vectors as columns in order to perform t-tests
nr_of_correct_total <- c()
nr_of_trials_hints <- c()
nr_of_trials_no_hints <- c()
nr_of_unique_words_hints <- c()
nr_of_unique_words_no_hints <- c()
nr_of_hints_bought <- c()
boolean_hint_condition_first <- c()
# distinction between words seen with hints and words seen without hints
nr_of_correct_hints <- c()
nr_of_correct_no_hints <- c()
nr_of_correct_not_seen <- c()
# distinction between short and long words
nr_of_correct_short <- c()
nr_of_correct_long <- c()
# distinction based both hints/no hints and short/long
# Oke toch niet
# nr_of_correct_hints_short <- c()
# nr_of_correct_no_hints_short <- c()
# nr_of_correct_not_seen_short <- c()
# nr_of_correct_hints_long <- c()
# nr_of_correct_no_hints_long <- c()
# nr_of_correct_not_seen_long <- c()
### CREATE A FORLOOP THAT STARTS FROM HERE
results_index = 1
for (study_file in study_files) {
studyFile <- read.csv(file = study_file, header = TRUE, sep = ",", dec = ".")
testFile <- read.csv(file = test_files[results_index], header = TRUE, sep = ",", dec = ".")
results_index = results_index + 1
#Clean white-space
Study = studyFile[!is.na(studyFile$trial),]
# Label what condition comes first, for Study data.
# HintFirst means that the first block was the Hint condition
if (nrow(Study[which(Study$cond == "Hint" & Study$block == 1),]) == 0) {
HintFirst = FALSE
} else {
HintFirst = TRUE
}
boolean_hint_condition_first <- append(boolean_hint_condition_first, HintFirst)
#Get unique fact IDs per condition for this person:
hint_trials = Study[Study$cond == 'Hint',]
nohint_trials = Study[Study$cond == 'No Hint',]
nr_of_trials_hints <- append(nr_of_trials_hints, nrow(hint_trials))
nr_of_trials_no_hints <- append(nr_of_trials_no_hints, nrow(nohint_trials))
unique_fact_ids_hints = unique(hint_trials$fact_id)
unique_fact_ids_nohints = unique(nohint_trials$fact_id)
nr_of_unique_words_hints <- append(nr_of_unique_words_hints, length(unique_fact_ids_hints))
nr_of_unique_words_no_hints <- append(nr_of_unique_words_no_hints, length(unique_fact_ids_nohints))
## Check how many hints were bought
hint_bought_trials <- Study[Study$hint == 'True',]
nr_of_hints_bought <- append(nr_of_hints_bought, nrow(hint_bought_trials))
## divide words from test in correct and incorrect
testCorrect <- testFile[testFile$correct == "yes",]
testIncorrect <- testFile[testFile$correct == "no",]
nr_of_correct_total <- append(nr_of_correct_total, nrow(testCorrect))
## divide correct words from test in 3 categories (seen with hint, seen with no hint, not seen during study)
correctNoHint <- testCorrect[testCorrect$fact_id %in% unique_fact_ids_nohints,]
correctHint <- testCorrect[testCorrect$fact_id %in% unique_fact_ids_hints,]
correctNotSeen <- testCorrect[!(testCorrect$fact_id %in% unique_fact_ids_hints) & !(testCorrect$fact_id %in% unique_fact_ids_nohints),]
nr_of_correct_no_hints <- append(nr_of_correct_no_hints, nrow(correctNoHint))
nr_of_correct_hints <- append(nr_of_correct_hints, nrow(correctHint))
nr_of_correct_not_seen <- append(nr_of_correct_not_seen, nrow(correctNotSeen))
## divide correct words from test in short vs long
correctShort <- testCorrect[testCorrect$easy_or_hard =="easy",]
correctLong <- testCorrect[testCorrect$easy_or_hard =="hard",]
nr_of_correct_short <- append(nr_of_correct_short, nrow(correctShort))
nr_of_correct_long <- append(nr_of_correct_long, nrow(correctLong))
}
### Make dataframe
dat <- data.frame(boolean_hint_condition_first, nr_of_hints_bought,
nr_of_trials_hints, nr_of_trials_no_hints,
nr_of_unique_words_hints, nr_of_unique_words_no_hints,
nr_of_correct_total, nr_of_correct_hints, nr_of_correct_no_hints, nr_of_correct_not_seen,
nr_of_correct_short, nr_of_correct_long)
### Perform t-tests
# Set working directory to source file location first! (under session)
# Reading in multiple data files (TO DO)
# https://monashbioinformaticsplatform.github.io/2015-09-28-rbioinformatics-intro-r/03-loops-R.html
study_files <- list.files(path = "Study", fullname = TRUE, pattern = "csv")
test_files <- list.files(path = "Test", fullename = TRUE, pattern = "csv")
# Initialize vectors for values
# After the for loop, create a dataframe with these vectors as columns in order to perform t-tests
nr_of_correct_total <- c()
nr_of_trials_hints <- c()
nr_of_trials_no_hints <- c()
nr_of_unique_words_hints <- c()
nr_of_unique_words_no_hints <- c()
nr_of_hints_bought <- c()
boolean_hint_condition_first <- c()
# distinction between words seen with hints and words seen without hints
nr_of_correct_hints <- c()
nr_of_correct_no_hints <- c()
nr_of_correct_not_seen <- c()
# distinction between short and long words
nr_of_correct_short <- c()
nr_of_correct_long <- c()
# distinction based both hints/no hints and short/long
# Oke toch niet
# nr_of_correct_hints_short <- c()
# nr_of_correct_no_hints_short <- c()
# nr_of_correct_not_seen_short <- c()
# nr_of_correct_hints_long <- c()
# nr_of_correct_no_hints_long <- c()
# nr_of_correct_not_seen_long <- c()
### CREATE A FORLOOP THAT STARTS FROM HERE
results_index = 1
for (study_file in study_files) {
studyFile <- read.csv(file = study_file, header = TRUE, sep = ",", dec = ".")
testFile <- read.csv(file = test_files[results_index], header = TRUE, sep = ",", dec = ".")
results_index = results_index + 1
#Clean white-space
Study = studyFile[!is.na(studyFile$trial),]
# Label what condition comes first, for Study data.
# HintFirst means that the first block was the Hint condition
if (nrow(Study[which(Study$cond == "Hint" & Study$block == 1),]) == 0) {
HintFirst = FALSE
} else {
HintFirst = TRUE
}
boolean_hint_condition_first <- append(boolean_hint_condition_first, HintFirst)
#Get unique fact IDs per condition for this person:
hint_trials = Study[Study$cond == 'Hint',]
nohint_trials = Study[Study$cond == 'No Hint',]
nr_of_trials_hints <- append(nr_of_trials_hints, nrow(hint_trials))
nr_of_trials_no_hints <- append(nr_of_trials_no_hints, nrow(nohint_trials))
unique_fact_ids_hints = unique(hint_trials$fact_id)
unique_fact_ids_nohints = unique(nohint_trials$fact_id)
nr_of_unique_words_hints <- append(nr_of_unique_words_hints, length(unique_fact_ids_hints))
nr_of_unique_words_no_hints <- append(nr_of_unique_words_no_hints, length(unique_fact_ids_nohints))
## Check how many hints were bought
hint_bought_trials <- Study[Study$hint == 'True',]
nr_of_hints_bought <- append(nr_of_hints_bought, nrow(hint_bought_trials))
## divide words from test in correct and incorrect
testCorrect <- testFile[testFile$correct == "yes",]
testIncorrect <- testFile[testFile$correct == "no",]
nr_of_correct_total <- append(nr_of_correct_total, nrow(testCorrect))
## divide correct words from test in 3 categories (seen with hint, seen with no hint, not seen during study)
correctNoHint <- testCorrect[testCorrect$fact_id %in% unique_fact_ids_nohints,]
correctHint <- testCorrect[testCorrect$fact_id %in% unique_fact_ids_hints,]
correctNotSeen <- testCorrect[!(testCorrect$fact_id %in% unique_fact_ids_hints) & !(testCorrect$fact_id %in% unique_fact_ids_nohints),]
nr_of_correct_no_hints <- append(nr_of_correct_no_hints, nrow(correctNoHint))
nr_of_correct_hints <- append(nr_of_correct_hints, nrow(correctHint))
nr_of_correct_not_seen <- append(nr_of_correct_not_seen, nrow(correctNotSeen))
## divide correct words from test in short vs long
correctShort <- testCorrect[testCorrect$easy_or_hard =="easy",]
correctLong <- testCorrect[testCorrect$easy_or_hard =="hard",]
nr_of_correct_short <- append(nr_of_correct_short, nrow(correctShort))
nr_of_correct_long <- append(nr_of_correct_long, nrow(correctLong))
}
### Make dataframe
dat <- data.frame(boolean_hint_condition_first, nr_of_hints_bought,
nr_of_trials_hints, nr_of_trials_no_hints,
nr_of_unique_words_hints, nr_of_unique_words_no_hints,
nr_of_correct_total, nr_of_correct_hints, nr_of_correct_no_hints, nr_of_correct_not_seen,
nr_of_correct_short, nr_of_correct_long)
### Perform t-tests
study_files <- list.files(path = "Study", fullname = TRUE, pattern = "csv")
test_files <- list.files(path = "Test", fullename = TRUE, pattern = "csv")
# Set working directory to source file location first! (under session)
# Reading in multiple data files (TO DO)
# https://monashbioinformaticsplatform.github.io/2015-09-28-rbioinformatics-intro-r/03-loops-R.html
study_files <- list.files(path = "Study", full.names = TRUE, pattern = "csv")
test_files <- list.files(path = "Test", full.names = TRUE, pattern = "csv")
# Initialize vectors for values
# After the for loop, create a dataframe with these vectors as columns in order to perform t-tests
nr_of_correct_total <- c()
nr_of_trials_hints <- c()
nr_of_trials_no_hints <- c()
nr_of_unique_words_hints <- c()
nr_of_unique_words_no_hints <- c()
nr_of_hints_bought <- c()
boolean_hint_condition_first <- c()
# distinction between words seen with hints and words seen without hints
nr_of_correct_hints <- c()
nr_of_correct_no_hints <- c()
nr_of_correct_not_seen <- c()
# distinction between short and long words
nr_of_correct_short <- c()
nr_of_correct_long <- c()
# distinction based both hints/no hints and short/long
# Oke toch niet
# nr_of_correct_hints_short <- c()
# nr_of_correct_no_hints_short <- c()
# nr_of_correct_not_seen_short <- c()
# nr_of_correct_hints_long <- c()
# nr_of_correct_no_hints_long <- c()
# nr_of_correct_not_seen_long <- c()
### CREATE A FORLOOP THAT STARTS FROM HERE
results_index = 1
for (study_file in study_files) {
studyFile <- read.csv(file = study_file, header = TRUE, sep = ",", dec = ".")
testFile <- read.csv(file = test_files[results_index], header = TRUE, sep = ",", dec = ".")
results_index = results_index + 1
#Clean white-space
Study = studyFile[!is.na(studyFile$trial),]
# Label what condition comes first, for Study data.
# HintFirst means that the first block was the Hint condition
if (nrow(Study[which(Study$cond == "Hint" & Study$block == 1),]) == 0) {
HintFirst = FALSE
} else {
HintFirst = TRUE
}
boolean_hint_condition_first <- append(boolean_hint_condition_first, HintFirst)
#Get unique fact IDs per condition for this person:
hint_trials = Study[Study$cond == 'Hint',]
nohint_trials = Study[Study$cond == 'No Hint',]
nr_of_trials_hints <- append(nr_of_trials_hints, nrow(hint_trials))
nr_of_trials_no_hints <- append(nr_of_trials_no_hints, nrow(nohint_trials))
unique_fact_ids_hints = unique(hint_trials$fact_id)
unique_fact_ids_nohints = unique(nohint_trials$fact_id)
nr_of_unique_words_hints <- append(nr_of_unique_words_hints, length(unique_fact_ids_hints))
nr_of_unique_words_no_hints <- append(nr_of_unique_words_no_hints, length(unique_fact_ids_nohints))
## Check how many hints were bought
hint_bought_trials <- Study[Study$hint == 'True',]
nr_of_hints_bought <- append(nr_of_hints_bought, nrow(hint_bought_trials))
## divide words from test in correct and incorrect
testCorrect <- testFile[testFile$correct == "yes",]
testIncorrect <- testFile[testFile$correct == "no",]
nr_of_correct_total <- append(nr_of_correct_total, nrow(testCorrect))
## divide correct words from test in 3 categories (seen with hint, seen with no hint, not seen during study)
correctNoHint <- testCorrect[testCorrect$fact_id %in% unique_fact_ids_nohints,]
correctHint <- testCorrect[testCorrect$fact_id %in% unique_fact_ids_hints,]
correctNotSeen <- testCorrect[!(testCorrect$fact_id %in% unique_fact_ids_hints) & !(testCorrect$fact_id %in% unique_fact_ids_nohints),]
nr_of_correct_no_hints <- append(nr_of_correct_no_hints, nrow(correctNoHint))
nr_of_correct_hints <- append(nr_of_correct_hints, nrow(correctHint))
nr_of_correct_not_seen <- append(nr_of_correct_not_seen, nrow(correctNotSeen))
## divide correct words from test in short vs long
correctShort <- testCorrect[testCorrect$easy_or_hard =="easy",]
correctLong <- testCorrect[testCorrect$easy_or_hard =="hard",]
nr_of_correct_short <- append(nr_of_correct_short, nrow(correctShort))
nr_of_correct_long <- append(nr_of_correct_long, nrow(correctLong))
}
### Make dataframe
dat <- data.frame(boolean_hint_condition_first, nr_of_hints_bought,
nr_of_trials_hints, nr_of_trials_no_hints,
nr_of_unique_words_hints, nr_of_unique_words_no_hints,
nr_of_correct_total, nr_of_correct_hints, nr_of_correct_no_hints, nr_of_correct_not_seen,
nr_of_correct_short, nr_of_correct_long)
### Perform t-tests
